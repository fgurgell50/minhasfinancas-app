{"ast":null,"code":"import ApiService from '../apiservice';\nimport ErroValidacao from '../exception/ErroValidacao';\nclass UsuarioService extends ApiService {\n  constructor() {\n    super('/api/usuarios');\n  }\n  autenticar(credenciais) {\n    return this.post('/autenticar', credenciais);\n  }\n  obterSaldoPorUsuario(id) {\n    return this.get(`/${id}/saldo`);\n  }\n  salvar(usuario) {\n    return this.post('', usuario);\n  }\n  validar(usuario) {\n    const erros = [];\n    if (!usuario.nome) {\n      erros.push('O campo Nome é obrigatório.');\n    }\n    if (!usuario.email) {\n      erros.push('O campo Email é obrigatório.');\n    } else if (!usuario.email.match(/^[a-z0-9.]+@[a-z0-9]+\\.[a-z]/)) {\n      erros.push('Informe um Email válido.');\n    }\n    if (!usuario.senha || !usuario.senhaRepeticao) {\n      erros.push('Digite a senha 2x.');\n    } else if (usuario.senha !== usuario.senhaRepeticao) {\n      erros.push('As senhas não batem.');\n    }\n    if (erros && erros.length > 0) {\n      throw new ErroValidacao(erros);\n    }\n  }\n}\nexport default UsuarioService;","map":{"version":3,"names":["ApiService","ErroValidacao","UsuarioService","constructor","autenticar","credenciais","post","obterSaldoPorUsuario","id","get","salvar","usuario","validar","erros","nome","push","email","match","senha","senhaRepeticao","length"],"sources":["C:/my_projects/minhas-financas-app/src/app/service/usuarioService.js"],"sourcesContent":["import ApiService from '../apiservice'\r\n\r\nimport ErroValidacao from '../exception/ErroValidacao'\r\n\r\nclass UsuarioService extends ApiService {\r\n\r\n    constructor(){\r\n        super('/api/usuarios')\r\n    }\r\n\r\n    autenticar(credenciais){\r\n        return this.post('/autenticar', credenciais)\r\n    }\r\n\r\n    obterSaldoPorUsuario(id){\r\n        return this.get(`/${id}/saldo`);\r\n    }\r\n\r\n    salvar(usuario){\r\n        return this.post('', usuario);\r\n    }\r\n\r\n    validar(usuario){\r\n        const erros = []\r\n\r\n        if(!usuario.nome){\r\n            erros.push('O campo Nome é obrigatório.')\r\n        }\r\n\r\n        if(!usuario.email){\r\n            erros.push('O campo Email é obrigatório.')\r\n        }else if( !usuario.email.match(/^[a-z0-9.]+@[a-z0-9]+\\.[a-z]/) ){\r\n            erros.push('Informe um Email válido.')\r\n        }\r\n\r\n        if(!usuario.senha || !usuario.senhaRepeticao){\r\n            erros.push('Digite a senha 2x.')\r\n        }else if( usuario.senha !== usuario.senhaRepeticao ){\r\n            erros.push('As senhas não batem.')\r\n        }        \r\n\r\n        if(erros && erros.length > 0){\r\n            throw new ErroValidacao(erros);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default UsuarioService;"],"mappings":"AAAA,OAAOA,UAAU,MAAM,eAAe;AAEtC,OAAOC,aAAa,MAAM,4BAA4B;AAEtD,MAAMC,cAAc,SAASF,UAAU,CAAC;EAEpCG,WAAWA,CAAA,EAAE;IACT,KAAK,CAAC,eAAe,CAAC;EAC1B;EAEAC,UAAUA,CAACC,WAAW,EAAC;IACnB,OAAO,IAAI,CAACC,IAAI,CAAC,aAAa,EAAED,WAAW,CAAC;EAChD;EAEAE,oBAAoBA,CAACC,EAAE,EAAC;IACpB,OAAO,IAAI,CAACC,GAAG,CAAE,IAAGD,EAAG,QAAO,CAAC;EACnC;EAEAE,MAAMA,CAACC,OAAO,EAAC;IACX,OAAO,IAAI,CAACL,IAAI,CAAC,EAAE,EAAEK,OAAO,CAAC;EACjC;EAEAC,OAAOA,CAACD,OAAO,EAAC;IACZ,MAAME,KAAK,GAAG,EAAE;IAEhB,IAAG,CAACF,OAAO,CAACG,IAAI,EAAC;MACbD,KAAK,CAACE,IAAI,CAAC,6BAA6B,CAAC;IAC7C;IAEA,IAAG,CAACJ,OAAO,CAACK,KAAK,EAAC;MACdH,KAAK,CAACE,IAAI,CAAC,8BAA8B,CAAC;IAC9C,CAAC,MAAK,IAAI,CAACJ,OAAO,CAACK,KAAK,CAACC,KAAK,CAAC,8BAA8B,CAAC,EAAE;MAC5DJ,KAAK,CAACE,IAAI,CAAC,0BAA0B,CAAC;IAC1C;IAEA,IAAG,CAACJ,OAAO,CAACO,KAAK,IAAI,CAACP,OAAO,CAACQ,cAAc,EAAC;MACzCN,KAAK,CAACE,IAAI,CAAC,oBAAoB,CAAC;IACpC,CAAC,MAAK,IAAIJ,OAAO,CAACO,KAAK,KAAKP,OAAO,CAACQ,cAAc,EAAE;MAChDN,KAAK,CAACE,IAAI,CAAC,sBAAsB,CAAC;IACtC;IAEA,IAAGF,KAAK,IAAIA,KAAK,CAACO,MAAM,GAAG,CAAC,EAAC;MACzB,MAAM,IAAInB,aAAa,CAACY,KAAK,CAAC;IAClC;EACJ;AAEJ;AAEA,eAAeX,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}